import os
import lit.util
import lit.formats

# From libcxx lit: Tell pylint that we know config and lit_config exist somewhere.
if "PYLINT_IMPORT" in os.environ:
    config = object()
    lit_config = object()

config.name = "cucorrTest"

loaded_site_cfg = getattr(config, "loaded_site_config", False)
if not loaded_site_cfg:
    site_cfg = lit_config.params.get("cutests_site_config", None)
    if site_cfg and os.path.exists(site_cfg):
        lit_config.load_config(config, site_cfg)
        raise SystemExit

config.test_format = lit.formats.ShTest(execute_external=True)
config.suffixes = [".c", ".cpp"]
config.excludes = ["Inputs"]

test_exec_root = getattr(config, "cucorr_testdir", None)
#test_exec_root = config.cutests_build_dir + "/testsuite-exec"
tsan_opts = 'TSAN_OPTIONS="exitcode=0 suppressions=%S/../support/suppression-lb2.txt"'

cucorr_kernel_d = 'CUCORR_KERNEL_DATA_FILE={}/%basename_t-kernel.yaml'.format(test_exec_root)
typeart_types_d = 'TYPEART_TYPE_FILE={}/%basename_t.yaml'.format(test_exec_root)

config.substitutions.append(("%cucorr-data", cucorr_kernel_d))
config.substitutions.append(("%typeart-data", typeart_types_d))

config.substitutions.append(("%cutests_test_dir", test_exec_root))

config.substitutions.append(("%filecheck", config.filecheck))
config.substitutions.append(('%cucorr-mpicc', '{} {} {}'.format(cucorr_kernel_d, typeart_types_d, config.cucorr_mpicc)))
config.substitutions.append(('%cucorr-mpicxx', '{} {} {}'.format(cucorr_kernel_d, typeart_types_d, config.cucorr_mpicxx)))
config.substitutions.append(('%mpi-exec', '{}'.format(config.mpiexec)))

config.substitutions.append(('%tsan-compile-flags', '-fsanitize=thread'))
config.substitutions.append(('%tsan-options', tsan_opts))

config.substitutions.append(('%cucorr-mpiexec', '{} {} {} LD_PRELOAD={} {}'.format(cucorr_kernel_d, typeart_types_d, tsan_opts, config.cucorr_interceptor, config.mpiexec)))
